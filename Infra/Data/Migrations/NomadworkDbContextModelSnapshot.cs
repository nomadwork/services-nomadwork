// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nomadwork.Infra.Data.Contexts;

namespace Nomadwork.Infra.Data.Migrations
{
    [DbContext(typeof(NomadworkDbContext))]
    partial class NomadworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.AddressModelData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Coutry")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,8)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(8,8)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("AddressId");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("TimeClose");

                    b.Property<DateTime>("TimeOpen");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Establishment");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long?>("EstablishmentModelDataId");

                    b.Property<string>("UrlPhoto")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentModelDataId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData", b =>
                {
                    b.HasOne("Nomadwork.Infra.Data.Model_Data.AddressModelData", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Photo", b =>
                {
                    b.HasOne("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData")
                        .WithMany("Photos")
                        .HasForeignKey("EstablishmentModelDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
