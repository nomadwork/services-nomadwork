// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nomadwork.Infra.Data.Contexts;

namespace Nomadwork.Infra.Data.Migrations
{
    [DbContext(typeof(NomadworkDbContext))]
    [Migration("20190923003017_TesteProduction1")]
    partial class TesteProduction1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.AddressModelData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Coutry")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(12,9)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(12,9)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Characteristic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long?>("EstablishmentModelDataId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int>("Quality");

                    b.Property<int>("Quantity");

                    b.Property<int>("Service");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentModelDataId");

                    b.ToTable("Characteristic");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("AddressId");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("TimeClose");

                    b.Property<DateTime>("TimeOpen");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Establishment");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long?>("EstablishmentModelDataId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("UrlPhoto")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentModelDataId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Characteristic", b =>
                {
                    b.HasOne("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData")
                        .WithMany("Characteristics")
                        .HasForeignKey("EstablishmentModelDataId");
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData", b =>
                {
                    b.HasOne("Nomadwork.Infra.Data.Model_Data.AddressModelData", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nomadwork.Infra.Data.Model_Data.Photo", b =>
                {
                    b.HasOne("Nomadwork.Infra.Data.Model_Data.EstablishmentModelData")
                        .WithMany("Photos")
                        .HasForeignKey("EstablishmentModelDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
